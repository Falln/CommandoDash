<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:CommandoDash="clr-namespace:CommandoDash"
        xmlns:local="clr-namespace:CommandoDash"
        xmlns:MyNamespace="clr-namespace:CommandoDash;assembly=CommandoDash"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" x:Class="CommandoDash.MainWindow"
        xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"    
        mc:Ignorable="d"
        Icon="/favicon-16x16.png"
        Title="MainWindow" Height="840" Width="1920" ResizeMode="NoResize"
        WindowStartupLocation="Manual" Left="0" Top="0"
        WindowStyle="None" BorderThickness="0" Background="#FF92C822">

    <Window.Resources>
        <!-- Default Colors -->
        <Color x:Key="BaseGray">#FF2A2A2A</Color>
        <Brush x:Key="CommandoRed">#FF0000</Brush>
        <Brush x:Key="CommandoNavy">#0004B6</Brush>
        <Brush x:Key="CommandoMetalGray">#BCBEC0</Brush>
        <Brush x:Key="PanelGrey">#FF454545</Brush>
        <Brush x:Key="TextBoxBackground">#FFB1B1B1</Brush>

        <!-- CurrentDraw Colors -->
        <Brush x:Key="CurrentTextForeground">#FF0000</Brush>
        <Brush x:Key="CurrentProgressForeground">#FF363636</Brush>
        <Brush x:Key="CurrentProgressBorder">#FF404040</Brush>
        <LinearGradientBrush x:Key="CurrentProgressBackground">
            <GradientStop Color="Red" Offset="0" />
            <GradientStop Color="#FF92C822" Offset="0.5" />
            <GradientStop Color="Green" Offset="1" />
        </LinearGradientBrush>
        <Brush x:Key="PowerDisabled">#FFBB0E00</Brush>
        <Brush x:Key="PowerEnabled">#FFBB0E00</Brush>
        <Brush x:Key="PowerBorder">#FF343435</Brush>

        <!-- Border Colors -->
        <Brush x:Key="AutoButtonBorder">#FFC5CBF9</Brush>

        <!-- Tab Colors -->
        <Brush x:Key="TabBorderColor">#FF404040</Brush>
        <Brush x:Key="ControlBorderColor">#FF404040</Brush>
        <Brush x:Key="DisabledTabColor">#FFC5CBF9</Brush>
        <Color x:Key="TabSelectedColor">#FF525252</Color>

        <!-- Button Colors -->
        <Brush x:Key="ButtonBackground">#FF343435</Brush>
        <Brush x:Key="ButtonPressed">#FF343435</Brush>
        <Brush x:Key="ButtonHovered">#FF525252</Brush>
        <Brush x:Key="AutoButtonBase">#FF901C1C</Brush>
        <Brush x:Key="AutoButtonHovered">#FFA42424</Brush>
        <Brush x:Key="AutoButtonPressed">#FF581010</Brush>
        <Brush x:Key="AutoButtonActive">#FF0000</Brush>

        <!-- Status Blocks Colors -->
        <Brush x:Key="SolenoidDisabled">#FF740900</Brush>
        <Brush x:Key="SolenoidEnabled">#FF00CD0C</Brush>
        <Brush x:Key="SolenoidBorder">#FF343435</Brush>
        <Brush x:Key="LimeSeesTarget">#FF149562</Brush>
        <Brush x:Key="LimeDefault">#FF083A26</Brush>
        <Brush x:Key="LimeBorder">#FF343435</Brush>
        <Brush x:Key="HoundRedHounding">#FFCC1311</Brush>
        <Brush x:Key="HoundRedDefault">#FF500A09</Brush>
        <Brush x:Key="HoundRedBorder">#FF343435</Brush>
        <Brush x:Key="HoundBlueHounding">#FF0270EA</Brush>
        <Brush x:Key="HoundBlueDefault">#FF032954</Brush>
        <Brush x:Key="HoundBlueBorder">#FF343435</Brush>

        <!-- Default Styles -->
        <Style TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Background" Value="#FFB1B1B1"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
        </Style>
        <Style TargetType="{x:Type ProgressBar}">
            <Setter Property="Width" Value="350"/>
            <Setter Property="Height" Value="18"/>
            <Setter Property="Value" Value="15"/>
            <Setter Property="Minimum" Value="0"/>
            <Setter Property="Maximum" Value="40"/>
            <Setter Property="Background" Value="{StaticResource CurrentProgressBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource CurrentProgressBorder}"/>
            <Setter Property="Foreground" Value="{StaticResource CurrentProgressForeground}"/>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        </Style>

        <!-- TextBlock/Box Styles -->
        <Style TargetType="{x:Type local:StatusTextBlock}" x:Key="StatusTextBlocks">
            <Setter Property="Height" Value="76"/>
            <!--1.428-->
            <Setter Property="Width" Value="108"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="{StaticResource ButtonBackground}"/>
            <Setter Property="IsEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type local:StatusTextBlock}">
                        <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2">
                            <ContentPresenter Content="{TemplateBinding Text}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsActive" Value="True">
                    <Setter Property="Background" Value="{Binding ActiveBrush, RelativeSource={RelativeSource Self}}"/>
                </Trigger>
                <Trigger Property="IsActive" Value="False">
                    <Setter Property="Background" Value="{Binding InactiveBrush, RelativeSource={RelativeSource Self}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type local:StatusTextBlock}" x:Key="ReadyToShootStatus">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="{StaticResource ButtonBackground}"/>
            <Setter Property="IsEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type local:StatusTextBlock}">
                        <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2">
                            <ContentPresenter Content="{TemplateBinding Text}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsActive" Value="True">
                    <Setter Property="Background" Value="{Binding ActiveBrush, RelativeSource={RelativeSource Self}}"/>
                </Trigger>
                <Trigger Property="IsActive" Value="False">
                    <Setter Property="Background" Value="{Binding InactiveBrush, RelativeSource={RelativeSource Self}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type local:StatusTextBlock}" x:Key="PowerStatusBlocks">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Width" Value="55"/>
            <Setter Property="Height" Value="23"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="{StaticResource ButtonBackground}"/>
            <Setter Property="IsEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type local:StatusTextBlock}">
                        <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                            <ContentPresenter Content="{TemplateBinding Text}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsActive" Value="True">
                    <Setter Property="Background" Value="{Binding ActiveBrush, RelativeSource={RelativeSource Self}}"/>
                </Trigger>
                <Trigger Property="IsActive" Value="False">
                    <Setter Property="Background" Value="{Binding InactiveBrush, RelativeSource={RelativeSource Self}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type TextBlock}" x:Key="CurrentDrawBlock">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="{StaticResource CurrentTextForeground}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>

        <!-- Button Styles -->
        <Style TargetType="{x:Type Button}" x:Key="WindowButtons">
            <Setter Property="Background" Value="#FF2A2A2A"/>
            <Setter Property="Width" Value="32"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF525252"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="RefreshButton">
            <Setter Property="Background" Value="#FF2A2A2A"/>
            <Setter Property="Width" Value="19"/>
            <Setter Property="Height" Value="19"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="2"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF525252"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource ButtonPressed}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="CameraConnectionButton">
            <Setter Property="Background" Value="{StaticResource ButtonBackground}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="TextElement.FontSize" Value="10"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderThickness="1" BorderBrush="{StaticResource TabBorderColor}" Background="{TemplateBinding Background}">
                            <ContentPresenter Margin="3.5" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource ButtonHovered}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource ButtonPressed}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type RadioButton}" x:Key="CameraRadioButtons">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="GroupName" Value="CameraRadioGroup"/>
        </Style>
        <Style TargetType="{x:Type RadioButton}" x:Key="AutoSelectionButtons">
            <Setter Property="Background" Value="{StaticResource AutoButtonBase}"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="GroupName" Value="AutoRadioGroup"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{StaticResource AutoButtonBorder}" BorderThickness="1">
                            <ContentPresenter Margin="3.5" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="{StaticResource AutoButtonActive}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True"/>
                        <Condition Property="IsChecked" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{StaticResource AutoButtonHovered}"/>
                </MultiTrigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource AutoButtonPressed}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Tab Styles -->
        <Style TargetType="{x:Type TabItem}" x:Key="TabItemBase">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border x:Name="Border" VerticalAlignment="Bottom" BorderThickness="1,1,1,0" BorderBrush="{DynamicResource TabBorderColor}">
                            <Grid x:Name="TabGrid">
                                <ContentPresenter x:Name="ContentPresenter"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center"
                                              ContentSource="Header"
                                              Margin="4,1,4,1"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#FFB1B1B1"/>
                                <Setter TargetName="Border" Property="Width" Value="Auto"/>
                                <Setter TargetName="Border" Property="Height" Value="21"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="#FF525252"/>
                                <Setter TargetName="Border" Property="Width" Value="Auto"/>
                                <Setter TargetName="Border" Property="Height" Value="19"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TabControl}" x:Key="TabControlBase">
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="{StaticResource ControlBorderColor}"/>
            <Setter Property="Padding" Value="0"/>
        </Style>
    </Window.Resources>

    <Border BorderThickness="0" BorderBrush="#FF2A2A2A">
        <Grid Background="#FF2A2A2A">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="264*"/>
                <ColumnDefinition Width="32"/>
                <ColumnDefinition Width="32"/>
                <ColumnDefinition Width="32"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="32"/>
                <RowDefinition Height="15*"/>
                <RowDefinition Height="391*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Base Robot Status indicators -->
            <StatusBar x:Name="robotStatus" Width="40" Height="40" Background="Red" Margin="5,5,15,0" Grid.Column="1" Grid.ColumnSpan="3" Grid.RowSpan="2" VerticalAlignment="Top"/>
            <Label Content="Robot IP" Grid.Column="3" Margin="8,3,16,6" RenderTransformOrigin="0.37,0.469" Foreground="White" Grid.ColumnSpan="4"/>
            <TextBlock x:Name="robotModeBlock" TextAlignment="Center" Grid.Column="11" HorizontalAlignment="Left" Margin="47,12,0,0" TextWrapping="Wrap" Text="DISCONNECTED" VerticalAlignment="Top" Width="130" Height="26" FontSize="18" Grid.RowSpan="2"/>
            <Label Content="Robot&#xA;Mode" Grid.Column="11" HorizontalAlignment="Left" VerticalAlignment="Top" Width="42" Margin="0,5,0,0" Grid.RowSpan="2" Foreground="White" Height="40"/>
            <TextBox x:Name="robotIPInput" KeyDown="robotIPInput_KeyDown" Text="10.58.89.2" Grid.Column="3" VerticalContentAlignment="Center" HorizontalAlignment="Left" Margin="11,23,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="105" Height="22" FontSize="14" Grid.ColumnSpan="8" Background="#FFB1B1B1" BorderBrush="{x:Null}" Grid.RowSpan="2"/>


            <!-- Window interaction buttons -->
            <Button x:Name="minimizeBtn" Style="{StaticResource WindowButtons}" Grid.Column="12" Grid.Row="0" Click="minimizeBtn_Click">
                <Image Source="/subtract.png" />
            </Button>
            <Button x:Name="makeResizeBtn" Style="{StaticResource WindowButtons}" Grid.Column="13" Grid.Row="0" Click="makeResizeBtn_Click">
                <Image Source="/restore-down.png" />
            </Button>
            <Button x:Name="closeBtn" Style="{StaticResource WindowButtons}" Grid.Column="14" Grid.Row="0" Click="closeBtn_Click">
                <Image Source="/close.png" />
            </Button>

            <!-- Tabs -->
            <TabControl Style="{DynamicResource TabControlBase}" Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="14" Margin="5,30,5,5" Grid.RowSpan="2">
                <TabItem Header="DriveTime" Style="{DynamicResource TabItemBase}" BorderBrush="#FF2A2A2A">
                    <Grid Background="#FF2A2A2A">
                        <!-- DriveTime -->
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="995*"/>
                            <ColumnDefinition Width="911*"/>
                        </Grid.ColumnDefinitions>
                        <Border Height="501" Margin="149,10,42,0" VerticalAlignment="Top" Background="Black">
                            <Image x:Name="cameraStream" />
                        </Border>
                        <Rectangle Grid.Column="1" HorizontalAlignment="Left" Height="272" Margin="553,450,0,0" Stroke="Black" VerticalAlignment="Top" Width="335" RenderTransformOrigin="0.5,0.5">
                            <Rectangle.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleY="-1"/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Rectangle.RenderTransform>
                        </Rectangle>
                        <Label Content="Manual Robot Control&#xD;&#xA;(Dashboard robot control)" HorizontalAlignment="Left" Margin="586,506,0,0" VerticalAlignment="Top" FontSize="36" Grid.Column="1" Height="170" Width="258"/>
                        <Button Click="Button_Click" Content="TestButton" HorizontalAlignment="Left" Margin="953,702,0,0" VerticalAlignment="Top" Grid.ColumnSpan="2"/>

                        <!-- Camera Connection -->
                        <Rectangle Margin="9,34,851,578" Fill="{StaticResource ResourceKey=PanelGrey}"/>
                        <Label Content="Camera Connection" HorizontalAlignment="Left" Margin="10,34,0,0" VerticalAlignment="Top" Foreground="#FFFEFEFE" Height="28" FontSize="14" FontWeight="SemiBold"/>
                        <TextBox x:Name="CameraURIInput" VerticalContentAlignment="Center" HorizontalAlignment="Left" Margin="17,87,0,0" TextWrapping="NoWrap" VerticalAlignment="Top" Width="120" Height="22" FontSize="12" Background="#FFB1B1B1" BorderBrush="{x:Null}" TextAlignment="Center" KeyDown="CameraURIInput_KeyDown"/>
                        <Label Content="Camera URI" HorizontalAlignment="Left" Margin="46,67,0,0" VerticalAlignment="Top" FontSize="10"/>
                        <Button x:Name="RestartCameraConnection" Content="Restart Camera Connection" Style="{StaticResource CameraConnectionButton}" HorizontalAlignment="Left" Margin="12,123,0,0" VerticalAlignment="Top" Height="27" Click="RestartCameraConnection_Click"/>

                        <!-- Camera Selector -->
                        <Rectangle Margin="9,186,851,293" Fill="{StaticResource ResourceKey=PanelGrey}"/>
                        <Label Content="Camera Selector" HorizontalAlignment="Left" Margin="20,186,0,0" VerticalAlignment="Top" Foreground="#FFFEFEFE" Height="28" FontSize="14" FontWeight="SemiBold"/>
                        <RadioButton x:Name="IntakeCamRadio" Style="{StaticResource CameraRadioButtons}" Content="IntakeCam"  HorizontalAlignment="Left" Margin="21,227,0,0" VerticalAlignment="Top" Checked="IntakeCamRadio_Checked"/>
                        <RadioButton x:Name="ShooterCamRadio" Style="{StaticResource CameraRadioButtons}" Content="ShooterCam" Unchecked="ShooterCamRadio_Unchecked" HorizontalAlignment="Left" Margin="21,275,0,0" VerticalAlignment="Top" Checked="ShooterCamRadio_Checked"/>
                        <RadioButton x:Name="OverlayCamRadio" Style="{StaticResource CameraRadioButtons}" Content="IntakeWithOverlay" HorizontalAlignment="Left" Margin="21,323,0,0" VerticalAlignment="Top" Checked="OverlayCamRadio_Checked"/>
                        <RadioButton x:Name="IntakeThreshRadio" Style="{StaticResource CameraRadioButtons}" Content="IntakeThreshold" HorizontalAlignment="Left" Margin="21,371,0,0" VerticalAlignment="Top" Checked="IntakeThreshRadio_Checked"/>
                        <RadioButton x:Name="ShooterThreshRadio" Style="{StaticResource CameraRadioButtons}" Content="ShooterThreshold" HorizontalAlignment="Left" Margin="21,419,0,0" VerticalAlignment="Top" Checked="ShooterThreshRadio_Checked"/>

                        <!-- Auto Selection Section -->
                        <Rectangle Margin="34,539,491,29" Fill="{StaticResource ResourceKey=PanelGrey}"/>
                        <RadioButton x:Name="TaxiRadio" Style="{StaticResource AutoSelectionButtons}" Content="Taxi" Checked="TaxiRadio_Checked" HorizontalAlignment="Left" Margin="63,572,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.515,-0.229"/>
                        <RadioButton x:Name="SpareRadio" Style="{StaticResource AutoSelectionButtons}" Content="Spare" Checked="SpareRadio_Checked" HorizontalAlignment="Left" Margin="63,658,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.495,0.114"/>
                        <RadioButton x:Name="IdealRadio" Style="{StaticResource AutoSelectionButtons}" Content="IdealAuto" Checked="IdealRadio_Checked" HorizontalAlignment="Left" Margin="219,630,0,0" VerticalAlignment="Top"/>
                        <RadioButton x:Name="SecondRadio" Style="{StaticResource AutoSelectionButtons}" Content="SecondAuto" Checked="SecondAutoRadio_Checked" HorizontalAlignment="Left" Margin="376,651,0,0" VerticalAlignment="Top"/>
                        <RadioButton x:Name="FullSendRadio" Style="{StaticResource AutoSelectionButtons}" Content="FullSend" Checked="FullSendRadio_Checked"  HorizontalAlignment="Left" Margin="376,572,0,0" VerticalAlignment="Top" RenderTransformOrigin="-0.005,-0.186"/>
                        <Border Background="{StaticResource TextBoxBackground}" HorizontalAlignment="Left" Margin="218,592,0,0" VerticalAlignment="Top" Height="18" Width="102">
                            <TextBlock x:Name="RioAutoBox" Text="RIOData" VerticalAlignment="Center" Margin="4,0,4,0" Background="{Binding Mode=OneWay, Source={StaticResource TextBoxBackground}}" TextAlignment="Center"/>
                        </Border>
                        <Label Content="RIO Reported Auto" HorizontalAlignment="Left" Margin="214,570,0,0" VerticalAlignment="Top"/>
                        <Image x:Name="AutoLayoutImage" HorizontalAlignment="Left" Height="192" Margin="559,527,0,0" VerticalAlignment="Top" Width="384" Source="/FRC 2022 PathPlanner Field - Ideal.png"/>
                        <Label Content="Autonomous Selection" HorizontalAlignment="Left" Margin="182,539,0,0" VerticalAlignment="Top" Foreground="#FFFEFEFE" Height="28" FontSize="16" FontWeight="SemiBold"/>

                        <!-- Power Consumption -->

                        <!-- Index Status -->
                        <Image Grid.Column="1" Margin="483,0,134,497" Source="/Images/5889-Index-Robot-PNG (3).png" Stretch="Fill"/>
                        <Rectangle Margin="801,19,24,521" Fill="{StaticResource ResourceKey=PanelGrey}" Grid.Column="1"/>
                        <Label Grid.Column="1" Content="Index Status" HorizontalAlignment="Left" Margin="800,19,0,0" VerticalAlignment="Top" FontSize="14" FontFamily="Segoe UI Semibold"/>

                        <!-- Solenoid Status -->
                        <local:StatusTextBlock x:Name="IntakeSolSB" Style="{StaticResource ResourceKey=StatusTextBlocks}" ActiveBrush="{StaticResource SolenoidEnabled}" InactiveBrush="{StaticResource SolenoidDisabled}" BorderBrush="{StaticResource SolenoidBorder}"  Margin="442,259,361,401" Grid.Column="1" Text="Intake"/>
                        <local:StatusTextBlock x:Name="MidSolSB" Style="{StaticResource ResourceKey=StatusTextBlocks}" ActiveBrush="{StaticResource SolenoidEnabled}" InactiveBrush="{StaticResource SolenoidDisabled}" BorderBrush="{StaticResource SolenoidBorder}" Margin="556,259,247,401" Grid.Column="1" Text="Mid"/>
                        <local:StatusTextBlock x:Name="TraversalSolSB" Style="{StaticResource ResourceKey=StatusTextBlocks}" ActiveBrush="{StaticResource SolenoidEnabled}" InactiveBrush="{StaticResource SolenoidDisabled}" BorderBrush="{StaticResource SolenoidBorder}" Margin="499,340,304,320" Grid.Column="1" Text="Traversal"/>

                        <!-- Vision Status -->
                        <local:StatusTextBlock x:Name="LimeSeesTargetSB" Style="{StaticResource ResourceKey=StatusTextBlocks}" ActiveBrush="{StaticResource LimeSeesTarget}" InactiveBrush="{StaticResource LimeDefault}" BorderBrush="{StaticResource LimeBorder}" Margin="683,259,120,401" Grid.Column="1" Text="Seeing HUB"/>
                        <local:StatusTextBlock x:Name="LimeTrackingTargetSB" Style="{StaticResource ResourceKey=StatusTextBlocks}" ActiveBrush="{StaticResource LimeSeesTarget}" InactiveBrush="{StaticResource LimeDefault}" BorderBrush="{StaticResource LimeBorder}" Margin="793,259,10,401" Grid.Column="1" Text="Auto Aiming"/>
                        <local:StatusTextBlock x:Name="HoundSeesTargetSB" Style="{StaticResource ResourceKey=StatusTextBlocks}" ActiveBrush="{StaticResource HoundBlueHounding}" InactiveBrush="{StaticResource HoundBlueDefault}" BorderBrush="{StaticResource HoundBlueBorder}" Margin="683,340,120,320" Grid.Column="1" Text="Seeing Cargo"/>
                        <local:StatusTextBlock x:Name="HoundHoundingTargetSB" Style="{StaticResource ResourceKey=StatusTextBlocks}" ActiveBrush="{StaticResource HoundBlueHounding}" InactiveBrush="{StaticResource HoundBlueDefault}" BorderBrush="{StaticResource HoundBlueBorder}" Margin="793,340,10,320" Grid.Column="1" Text="Hounding"/>

                        <!-- Robot Status -->
                        <Rectangle Margin="16,16,531,548" Fill="{StaticResource ResourceKey=PanelGrey}" Grid.Column="1"/>
                        <Label Content="Shooter Status" HorizontalAlignment="Left" Margin="140,11,0,0" VerticalAlignment="Top" Foreground="#FFFEFEFE" Height="46" FontSize="16" FontWeight="SemiBold" Grid.Column="1" Width="116"/>
                        <local:StatusTextBlock x:Name="ReadyToFireSB" Style="{StaticResource ResourceKey=ReadyToShootStatus}" ActiveBrush="{StaticResource SolenoidEnabled}" InactiveBrush="{StaticResource SolenoidDisabled}" BorderBrush="{StaticResource SolenoidBorder}"  Margin="32,57,707,583" Grid.Column="1" Text="READY TO FIRE"/>
                        <TextBox x:Name="ManualCycleBox" KeyDown="robotIPInput_KeyDown" Text="Current Manual " Grid.Column="1" VerticalContentAlignment="Center" HorizontalAlignment="Left" Margin="228,62,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="134" Height="40" FontSize="14" Background="#FFB1B1B1" BorderBrush="{x:Null}" />
                        <TextBox x:Name="ShooterRPMBox" KeyDown="robotIPInput_KeyDown" Text="Shooter RPM" Grid.Column="1" VerticalContentAlignment="Center" HorizontalAlignment="Left" Margin="228,123,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="136" Height="40" FontSize="14" Background="#FFB1B1B1" BorderBrush="{x:Null}" />
                        <Label Grid.Column="1" Content="Manual Cycle Speed" HorizontalAlignment="Left" Margin="224,37,0,0" VerticalAlignment="Top" FontSize="14"/>
                        <Label Grid.Column="1" Content="Shooter RPM" HorizontalAlignment="Left" Margin="224,99,0,0" VerticalAlignment="Top" FontSize="14"/>


                        <local:StatusTextBlock x:Name="IsCentricSB" Style="{StaticResource ResourceKey=ReadyToShootStatus}" ActiveBrush="{StaticResource SolenoidEnabled}" InactiveBrush="{StaticResource SolenoidDisabled}" BorderBrush="{StaticResource SolenoidBorder}"  Margin="240,238,549,380" Grid.Column="1" Text="Centric-&#xD;&#xA;Mode"/>
                        <Ellipse Stroke="DimGray" StrokeThickness="12" Margin="34,221,707,346" Grid.Column="1" RenderTransformOrigin="0.5,0.5"/>
                        <Ellipse Stroke="Red" StrokeThickness="12" Margin="34,221,707,346" Grid.Column="1" RenderTransformOrigin="0.5,0.5">
                            <Ellipse.Clip>
                                <RectangleGeometry Rect="0,0,60,60"/>
                                <!-- x: 0, y: 0, width: 50, height: 100-->
                            </Ellipse.Clip>
                            <Ellipse.RenderTransform>
                                <RotateTransform x:Name="GyroAngleEllipseAngle" Angle="44.881"/>
                            </Ellipse.RenderTransform>
                        </Ellipse>
                        <Label Grid.Column="1" Content="Robot Angle" HorizontalAlignment="Left" Margin="63,191,0,0" VerticalAlignment="Top" Width="146" RenderTransformOrigin="0.5,0.5" FontSize="18"/>
                        <TextBlock x:Name="GyroAngleText" Grid.Column="1" HorizontalAlignment="Left" Margin="75,280,0,0" TextWrapping="Wrap" Text="0°" VerticalAlignment="Top" Height="51" Width="96" FontSize="36" TextAlignment="Center" Foreground="White"/>


                        <!-- Current Draw -->
                        <Rectangle Margin="38,480,409,47" Fill="{StaticResource ResourceKey=PanelGrey}" Grid.Column="1"/>
                        <Label Grid.Column="1" Content="Drive" HorizontalAlignment="Left" Margin="47,506,0,0" VerticalAlignment="Top" Height="27" Width="66" FontSize="14" RenderTransformOrigin="0.5,0.5"/>
                        <Label Grid.Column="1" Content="Subsystem Current Draws" HorizontalAlignment="Left" Margin="172,480,0,0" VerticalAlignment="Top"  FontSize="16" FontWeight="SemiBold"/>
                        <TextBlock x:Name="DrivePowerText" Style="{StaticResource CurrentDrawBlock}" Grid.Column="1" HorizontalAlignment="Left" Margin="107,511,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Text="0A"/>
                        <Label Grid.Column="1" Content="Shooter" HorizontalAlignment="Left" Margin="47,526,0,0" VerticalAlignment="Top" Height="27" Width="66" FontSize="14" RenderTransformOrigin="0.5,0.5"/>
                        <TextBlock x:Name="ShooterPowerText" Style="{StaticResource CurrentDrawBlock}" Grid.Column="1" HorizontalAlignment="Left" Margin="107,531,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Text="0A" RenderTransformOrigin="0.641,1.593" Height="20"/>
                        <Label Grid.Column="1" Content="Intake" HorizontalAlignment="Left" Margin="47,546,0,0" VerticalAlignment="Top" Height="27" Width="66" FontSize="14" RenderTransformOrigin="0.5,0.5"/>
                        <TextBlock x:Name="IntakePowerText" Style="{StaticResource CurrentDrawBlock}" Grid.Column="1" HorizontalAlignment="Left" Margin="107,551,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Text="0A" RenderTransformOrigin="0.641,1.593"/>
                        <Label Grid.Column="1" Content="Index" HorizontalAlignment="Left" Margin="47,566,0,0" VerticalAlignment="Top" Height="27" Width="66" FontSize="14" RenderTransformOrigin="0.5,0.5"/>
                        <TextBlock x:Name="IndexPowerText" Style="{StaticResource CurrentDrawBlock}" Grid.Column="1" HorizontalAlignment="Left" Margin="107,571,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Text="0A" RenderTransformOrigin="0.641,1.593"/>
                        <Label Grid.Column="1" Content="Transfer" HorizontalAlignment="Left" Margin="47,586,0,0" VerticalAlignment="Top" Height="27" Width="66" FontSize="14" RenderTransformOrigin="0.5,0.5"/>
                        <TextBlock x:Name="TransferPowerText" Style="{StaticResource CurrentDrawBlock}" Grid.Column="1" HorizontalAlignment="Left" Margin="107,591,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Text="0A" RenderTransformOrigin="0.641,1.593"/>
                        <Label Grid.Column="1" Content="VRM" HorizontalAlignment="Left" Margin="47,606,0,0" VerticalAlignment="Top" Height="28" Width="66" FontSize="14" RenderTransformOrigin="0.5,0.5" />
                        <TextBlock x:Name="VRMPowerText" Style="{StaticResource CurrentDrawBlock}" Grid.Column="1" HorizontalAlignment="Left" Margin="107,611,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Text="0A" RenderTransformOrigin="0.641,1.593"/>
                        <ProgressBar x:Name="DrivePowerProgress" Grid.Column="1" HorizontalAlignment="Left" Margin="133,512,0,0" VerticalAlignment="Top">
                            <ProgressBar.RenderTransform>
                                <RotateTransform Angle="180"/>
                            </ProgressBar.RenderTransform>
                        </ProgressBar>
                        <ProgressBar x:Name="ShooterPowerProgress" Grid.Column="1" HorizontalAlignment="Left" Margin="133,532,0,0" VerticalAlignment="Top">
                            <ProgressBar.RenderTransform>
                                <RotateTransform Angle="180"/>
                            </ProgressBar.RenderTransform>
                        </ProgressBar>
                        <ProgressBar x:Name="IntakePowerProgress" Grid.Column="1" HorizontalAlignment="Left" Margin="133,552,0,0" VerticalAlignment="Top">
                            <ProgressBar.RenderTransform>
                                <RotateTransform Angle="180"/>
                            </ProgressBar.RenderTransform>
                        </ProgressBar>
                        <ProgressBar x:Name="IndexPowerProgress" Grid.Column="1" HorizontalAlignment="Left" Margin="133,572,0,0" VerticalAlignment="Top">
                            <ProgressBar.RenderTransform>
                                <RotateTransform Angle="180"/>
                            </ProgressBar.RenderTransform>
                        </ProgressBar>
                        <ProgressBar x:Name="TransferPowerProgress" Grid.Column="1" HorizontalAlignment="Left" Margin="133,592,0,0" VerticalAlignment="Top">
                            <ProgressBar.RenderTransform>
                                <RotateTransform Angle="180"/>
                            </ProgressBar.RenderTransform>
                        </ProgressBar>
                        <ProgressBar x:Name="VRMPowerProgress" Grid.Column="1" HorizontalAlignment="Left" Margin="133,612,0,0" VerticalAlignment="Top">
                            <ProgressBar.RenderTransform>
                                <RotateTransform Angle="180"/>
                            </ProgressBar.RenderTransform>
                        </ProgressBar>
                        <Label Grid.Column="1" Content="Total Power Draw" HorizontalAlignment="Left" Margin="176,633,0,0" VerticalAlignment="Top"/>
                        <Label Grid.Column="1" Content="Battery Voltage" HorizontalAlignment="Left" Margin="187,659,0,0" VerticalAlignment="Top"/>
                        <local:StatusTextBlock x:Name="BatteryVolatgeSB" Style="{StaticResource ResourceKey=PowerStatusBlocks}" ActiveBrush="{StaticResource PowerEnabled}" InactiveBrush="{StaticResource PowerDisabled}" BorderBrush="{StaticResource PowerBorder}"  Margin="277,661,579,52" Grid.Column="1" Text="300A"/>
                        <local:StatusTextBlock x:Name="TotalCurrentSB" Style="{StaticResource ResourceKey=PowerStatusBlocks}" ActiveBrush="{StaticResource PowerEnabled}" InactiveBrush="{StaticResource PowerDisabled}" BorderBrush="{StaticResource PowerBorder}"  Margin="277,634,579,79" Grid.Column="1" Text="12.7V"/>




                    </Grid>
                </TabItem>
                <TabItem Header="AutoLayouts"  Style="{DynamicResource TabItemBase}">
                    <Grid Background="#FF2A2A2A">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="23*"/>
                            <ColumnDefinition Width="1883*"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </TabItem>
                <TabItem Header="PIDTuning" Style="{DynamicResource TabItemBase}">
                    <Grid Background="#FF2A2A2A"/>
                </TabItem>
                <TabItem Header="Feedback"  Style="{DynamicResource TabItemBase}">
                    <Grid Background="#FF2A2A2A"/>
                </TabItem>
            </TabControl>
            <Button x:Name="refreshBtn" Style="{DynamicResource RefreshButton}" Click="refreshBtn_Click" Grid.Column="14" HorizontalAlignment="Center" Margin="0,4,0,0" VerticalAlignment="Top" Grid.Row="2">
                <Image Source="/refresh_icon.png" />
            </Button>
            <Image Margin="757,3,823,0" VerticalAlignment="Top" Source="/gear-white-transparent_85x90.png.png" Grid.Column="11" Grid.RowSpan="3" Width="85" Height="80"/>
            <Grid Grid.Row="2"/>

        </Grid>
    </Border>
</Window>


